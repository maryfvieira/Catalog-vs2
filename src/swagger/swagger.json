{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "version": "1.0.0",
    "description": "API para gerenciamento de produtos"
  },
  "paths": {
    "/product/all": {
      "get": {
        "summary": "Obter todos os produtos",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Lista de produtos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "post": {
        "summary": "Criar um novo produto",
        "operationId": "createProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Entrada inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "summary": "Obter produto por ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do produto (ObjectID)"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualizar um produto",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do produto (ObjectID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Entrada inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Excluir um produto",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do produto (ObjectID)"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto excluído com sucesso"
          },
          "404": {
            "description": "Produto não encontrado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "required": ["id", "name", "price"],
        "properties": {
          "id": {
            "type": "string",
            "example": "6624b5c9a78d935e5e7d3f2a"
          },
          "name": {
            "type": "string",
            "example": "Smartphone"
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 999.99
          },
          "description": {
            "type": "string",
            "example": "Último modelo de smartphone",
            "nullable": true
          }
        }
      },
      "ProductCreateDto": {
        "type": "object",
        "required": ["name", "price"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Smartphone",
            "minLength": 1
          },
          "price": {
            "type": "number",
            "format": "double",
            "minimum": 0.01,
            "example": 999.99
          },
          "description": {
            "type": "string",
            "example": "Último modelo de smartphone",
            "nullable": true
          }
        }
      },
      "ProductUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Smartphone Premium",
            "minLength": 1
          },
          "price": {
            "type": "number",
            "format": "double",
            "minimum": 0.01,
            "example": 1299.99
          },
          "description": {
            "type": "string",
            "example": "Modelo premium com câmera avançada",
            "nullable": true
          }
        },
        "minProperties": 1
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Validation failed"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "example": "price"
                },
                "constraints": {
                  "type": "object",
                  "properties": {
                    "min": {
                      "type": "string",
                      "example": "Price must be greater than 0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}