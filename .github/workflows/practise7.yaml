name: Practise7

on:
  push:
    branches:
      - main

env:
  MONGODB_PORT: 42069
  MONGO_DB_TIMEOUT: 15000
  PORT: 3000

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: '7.0'
          mongodb-username: user
          mongodb-password: 123456
          mongodb-db: curso_git
          mongodb-replica-set: test-rs
          mongodb-port: 42069
          mongodb-create-collection: products

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          npm run build
          npx tsc-alias -v

      - name: Run unit tests with mock
        env:
          NODE_ENV: test
          CI: true
        run: npm run test

      - name: Install mongosh
        run: |
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
          echo "deb [signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Check mongosh version
        run: mongosh --version

      - name: Run e2e tests
        env:
          NODE_ENV: test
          CI: true
          MONGODB_CLUSTER_ADDRESS: 127.0.0.1
          MONGODB_USERNAME: user
          MONGODB_PASSWORD: 123456
          MONGODB_DB_NAME: curso_git
          MONGODB_PORT: 42069
          MONGO_DB_TIMEOUT: 15000
          DATABASE_URL: mongodb://user:123456@127.0.0.1:42069/curso_git?authSource=curso_git&replicaSet=test-rs
        run: | 
          echo "ðŸ“Œ DATABASE_URL: $DATABASE_URL"
          
          echo "ðŸš€ Executando testes e2e..."
          npm run test:e2e

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: echo "Deploy step"
