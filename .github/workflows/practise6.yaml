name: Practise6

on:
  push:
    branches:
      - main

env:
  MONGODB_PORT: 27017
  MONGO_DB_TIMEOUT: 15000
  PORT: 3000

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --replSet rs0 --bind_ip_all

    steps:
      - name: Set database environment variables
        run: |
          echo "MONGODB_CLUSTER_ADDRESS=localhost" >> $GITHUB_ENV
          echo "MONGODB_USERNAME=user" >> $GITHUB_ENV
          echo "MONGODB_PASSWORD=123456" >> $GITHUB_ENV
          echo "MONGODB_DB_NAME=curso_git" >> $GITHUB_ENV

      - name: Install Mongo Shell (mongosh)
        run: |
          curl -fsSL https://pgp.mongodb.com/server-6.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
          echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Wait for MongoDB to be ready
        run: |
          echo "⏳ Aguardando MongoDB iniciar..."
          for i in {1..20}; do
            if mongosh "mongodb://localhost:27017" --eval "db.runCommand({ ping: 1 })" > /dev/null 2>&1; then
              echo "✅ MongoDB está pronto"
              break
            fi
            echo "Tentando conexão... ($i)"
            sleep 2
          done

      - name: Initialize Replica Set
        run: |
          echo "🔧 Inicializando Replica Set..."
          mongosh "mongodb://localhost:27017" <<EOF
          rs.initiate({
            _id: "rs0",
            members: [{ _id: 0, host: "localhost:27017" }]
          })
EOF
          sleep 5

      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          npm run build
          npx tsc-alias -v

      - name: Wait for app healthcheck
        run: |
          echo "⌛ Aguardando rota de healthcheck..."
          node dist/server.js &
          SERVER_PID=$!
          for i in {1..30}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health)
            if [ "$status" -eq 200 ]; then
              echo "✅ Healthcheck OK"
              break
            fi
            echo "Tentativa $i: aguardando..."
            sleep 1
          done
          if [ "$status" -ne 200 ]; then
            echo "❌ Healthcheck falhou após 30s"
            kill $SERVER_PID
            exit 1
          fi
          echo "🧪 Executando testes Playwright..."
          npx playwright test
          TEST_RESULT=$?
          echo "🛑 Encerrando servidor"
          kill $SERVER_PID
          wait $SERVER_PID
          exit $TEST_RESULT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: echo "📦 Deploy step (placeholder)"
