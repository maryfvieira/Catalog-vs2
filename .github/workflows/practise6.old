name: Practise6

on:
  push:
    branches:
      - main

env:
  MONGODB_PORT: 27017
  MONGO_DB_TIMEOUT: 15000
  PORT: 3000

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: 123456
          MONGO_INITDB_DATABASE: curso_git
        options: >-
          --replSet rs0 --bind_ip_all

    steps:
      - name: Set database environment variables
        run: |
          echo "MONGODB_CLUSTER_ADDRESS=localhost" >> $GITHUB_ENV
          echo "MONGODB_USERNAME=user" >> $GITHUB_ENV
          echo "MONGODB_PASSWORD=123456" >> $GITHUB_ENV
          echo "MONGODB_DB_NAME=curso_git" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Initialize Replica Set
        run: |
          echo "‚è≥ Inicializando Replica Set..."
          mongosh --eval "rs.initiate({_id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }]})"
          echo "‚úÖ Replica Set inicializado"
          sleep 10  # aguarda o Mongo eleger o primary

      - name: Build project
        run: |
          npm run build
          npx tsc-alias -v

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..30}; do
            mongosh --eval "db.adminCommand('ping')" && break
            echo "Tentativa $i: aguardando MongoDB..."
            sleep 1
          done

      - name: Run tests with server
        env:
          PORT: ${{ env.PORT }}
          NODE_ENV: test
          CI: true
          MONGODB_CLUSTER_ADDRESS: localhost
          MONGODB_USERNAME: user
          MONGODB_PASSWORD: 123456
          MONGODB_DB_NAME: curso_git
          DATABASE_URL: mongodb://user:123456@localhost:27017/curso_git?authSource=curso_git&replicaSet=rs0
        run: |
          echo "‚åõ Aguardando rota de healthcheck..."
          for i in {1..30}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health)
            if [ "$status" -eq 200 ]; then
              echo "‚úÖ Healthcheck OK"
              break
            fi
            echo "Tentativa $i: aguardando..."
            sleep 1
          done

          if [ "$status" -ne 200 ]; then
            echo "‚ùå Healthcheck falhou ap√≥s 30s"
            exit 1
          fi

          echo "üöÄ Executando testes Playwright..."
          npm run test:e2e

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: echo "Deploy step"
